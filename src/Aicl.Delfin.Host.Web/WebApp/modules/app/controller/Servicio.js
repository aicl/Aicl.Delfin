/*
 * File: app/controller/Servicio.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('App.controller.Servicio', {
    extend: 'Ext.app.Controller',

    stores: [
        'Servicio',
        'ServicioProcedimiento',
        'Procedimiento'
    ],
    views: [
        'servicio.Panel',
        'servicio.Window',
        'procedimiento.Window'
    ],

    refs: [
        {
            ref: 'servicioForm',
            selector: 'form[name=ServicioForm]'
        },
        {
            ref: 'findServicioText',
            selector: 'toolbar[name=MainToolbar] textfield[name=FindServicio]'
        },
        {
            ref: 'servicioProcedimientoForm',
            selector: 'form[name=ServicioProcedimientoForm]'
        },
        {
            ref: 'servicioList',
            selector: 'gridpanel[name=ServicioList]'
        },
        {
            ref: 'servicioProcedimientoList',
            selector: 'gridpanel[name=ServicioProcedimientoList]'
        },
        {
            ref: 'servicioSelectButton',
            selector: 'toolbar[name=FindToolbar] button[action=select]'
        },
        {
            ref: 'procedimientoForm',
            selector: 'form[name=ProcedimientoForm]'
        },
        {
            ref: 'procedimientoList',
            selector: 'gridpanel[name=ProcedimientoList]'
        },
        {
            ref: 'findProcedimientoText',
            selector: 'toolbar[name=ProcedimientoToolbar] textfield[name=FindProcedimiento]'
        },
        {
            ref: 'procedimientoSelectButton',
            selector: 'toolbar[name=ProcedimientoToolbar] button[action=select]'
        }
    ],

    onServicioProcedimientoListSelectionChange: function(tablepanel, selections, options) {
        if (selections.length){
            this.servicioProcedimientoLoadRecord(selections[0]);
        }
        else{
            this.getServicioProcedimientoForm().getForm().reset();
        }
    },

    onNewServicioClick: function(button, e, options) {
        this.getServicioForm().getForm().reset();
        this.getServicioProcedimientoStore().removeAll();
    },

    onFindServicioClick: function(button, e, options) {
        var searchText= this.getFindServicioText().getValue();

        var request={
            Nombre:searchText,
            format:'json'
        };

        var store=this.getServicioStore();
        store.getProxy().extraParams=request;
        store.loadPage(1);
    },

    onSaveServicioClick: function(button, e, options) {
        var record = this.getServicioForm().getForm().getFieldValues(false);
        this.getServicioStore().getProxy().extraParams={format:'json'};
        this.getServicioStore().save(record);
    },

    onRemoveServicioClick: function(button, e, options) {
        var grid = this.getServicioList();
        var record = grid.getSelectionModel().getSelection()[0];
        this.getServicioStore().remove(record);
    },

    onNewServicioProcedimientoClick: function(button, e, options) {
        this.procedimientoWindow.show();
    },

    onRemoveServicioProcedimientoClick: function(button, e, options) {
        var grid = this.getServicioProcedimientoList();
        var record = grid.getSelectionModel().getSelection()[0];
        this.getServicioProcedimientoStore().remove(record);
    },

    onSelectServicioClick: function(button, e, options) {
        this.selectServicioWindow.hide();
        var record= this.getServicioList().getSelectionModel().getSelection()[0];
        this.servicioLoadProcedimientos(record);
        this.servicioLoadRecord(record);
    },

    onServicioListSelectionChange: function(tablepanel, selections, options) {
        this.getServicioSelectButton().setDisabled(selections.length?false:true);
    },

    onNewProcedimientoClick: function(button, e, options) {
        //this.getProcedimientoForm().getForm().reset();
        this.getProcedimientoStore().removeAll();
    },

    onFindProcedimientoClick: function(button, e, options) {
        var searchText= this.getFindProcedimientoText().getValue();

        var request={
            Nombre:searchText,
            format:'json'
        };

        var store=this.getProcedimientoStore();
        store.getProxy().extraParams=request;
        store.loadPage(1);
    },

    onSaveProcedimientoClick: function(button, e, options) {
        var record = this.getProcedimientoForm().getForm().getFieldValues(false);
        this.getProcedimientoStore().getProxy().extraParams={format:'json'};
        this.getProcedimientoStore().save(record);
    },

    onRemoveProcedimientoClick: function(button, e, options) {
        var grid = this.getProcedimientoList();
        var record = grid.getSelectionModel().getSelection()[0];
        this.getProcedimientoStore().remove(record);
    },

    onSelectProcedimientoClick: function(button, e, options) {
        var procedimiento= this.getProcedimientoList().getSelectionModel().getSelection()[0];

        var record = {
            IdServicio:this.getServicioForm().getForm().findField('Id').getValue(),
            IdProcedimiento: procedimiento.getId()
        };
        this.getServicioProcedimientoStore().getProxy().extraParams={format:'json'};
        this.getServicioProcedimientoStore().save(record);

    },

    onProcedimientoListSelectionChange: function(tablepanel, selections, options) {
        if (selections.length){
            this.procedimientoLoadRecord(selections[0]);
        }
        else{
            this.getProcedimientoForm().getForm().reset();
            this.getProcedimientoSelectButton().setDisabled(true);
        }

    },

    init: function(application) {
        this.selectServicioWindow= new App.view.servicio.Window();
        this.procedimientoWindow= new App.view.procedimiento.Window();


        this.control({
            "gridpanel[name=ServicioProcedimientoList]": {
                selectionchange: this.onServicioProcedimientoListSelectionChange
            },
            "toolbar[name=MainToolbar] button[action=new]": {
                click: this.onNewServicioClick
            },
            "toolbar[name=MainToolbar] button[action=find]": {
                click: this.onFindServicioClick
            },
            "toolbar[name=MainToolbar] button[action=save]": {
                click: this.onSaveServicioClick
            },
            "toolbar[name=MainToolbar] button[action=remove]": {
                click: this.onRemoveServicioClick
            },
            "toolbar[name=ServicioProcedimientoToolbar] button[action=new]": {
                click: this.onNewServicioProcedimientoClick
            },
            "toolbar[name=ServicioProcedimientoToolbar] button[action=remove]": {
                click: this.onRemoveServicioProcedimientoClick
            },
            "toolbar[name=FindToolbar] button[action=select]": {
                click: this.onSelectServicioClick
            },
            "gridpanel[name=ServicioList]": {
                selectionchange: this.onServicioListSelectionChange
            },
            "toolbar[name=ProcedimientoToolbar] button[action=new]": {
                click: this.onNewProcedimientoClick
            },
            "toolbar[name=ProcedimientoToolbar] button[action=find]": {
                click: this.onFindProcedimientoClick
            },
            "toolbar[name=ProcedimientoToolbar] button[action=save]": {
                click: this.onSaveProcedimientoClick
            },
            "toolbar[name=ProcedimientoToolbar] button[action=remove]": {
                click: this.onRemoveProcedimientoClick
            },
            "toolbar[name=ProcedimientoToolbar] button[action=select]": {
                click: this.onSelectProcedimientoClick
            },
            "gridpanel[name=ProcedimientoList]": {
                selectionchange: this.onProcedimientoListSelectionChange
            }
        });
    },

    onLaunch: function() {
        this.getServicioStore().on('load', function(store , records, success, eOpts){
            if(!success){
                Ext.Msg.alert('Error', 'Error al cargar Servicios. Intente mas tarde');
                return;
            }
            if(records.length===0){
                Aicl.Util.msg('Aviso', 'Sin informacion');
                return;
            }
            if(records.length==1){
                var record = records[0];
                this.getServicioList().getSelectionModel().select(record,true,true);
                this.servicioLoadProcedimientos(record);
                this.servicioLoadRecord(record);
                return;
            }
            this.selectServicioWindow.show();
        }, this);

        this.getServicioStore().on('write', function(store, operation, eOpts ){
            var record =  operation.getRecords()[0];
            if (operation.action != 'destroy'){
                this.getServicioList().getSelectionModel().select(record,true,true);
                this.servicioLoadRecord(record);
            }       
        }, this);


        this.getServicioProcedimientoStore().on('write', function(store, operation, eOpts ){
            var record =  operation.getRecords()[0];
            if (operation.action != 'destroy'){
                this.getServicioProcedimientoList().getSelectionModel().select(record,true,true);
                this.servicioProcedimientoLoadRecord(record);
            }       
        }, this);

        this.getProcedimientoStore().on('load', function(store , records, success, eOpts){
            if(!success){
                Ext.Msg.alert('Error', 'Error al cargar Procedimientos. Intente mas tarde');
                return;
            }
            if(records.length===0){
                Aicl.Util.msg('Aviso', 'Sin informacion');
                return;
            }
            if(records.length==1){
                var record = records[0];
                this.getProcedimientoList().getSelectionModel().select(record,true,true);
                this.procedimientoLoadRecord(record);
                return;
            }
        }, this);

        this.getProcedimientoStore().on('write', function(store, operation, eOpts ){
            var record =  operation.getRecords()[0];
            if (operation.action != 'destroy'){
                this.getProcedimientoList().getSelectionModel().select(record,true,true);
                this.procedimientoLoadRecord(record);
            }       
        }, this);

    },

    servicioProcedimientoLoadRecord: function(record) {
        this.getServicioProcedimientoForm().getForm().loadRecord(record);
    },

    servicioLoadRecord: function(record) {
        this.getServicioForm().getForm().loadRecord(record);
    },

    servicioLoadProcedimientos: function(record) {
        this.getServicioProcedimientoStore().load({params:{IdServicio: record.getId()}});
        this.getServicioProcedimientoList().determineScrollbars();
    },

    procedimientoLoadRecord: function(record) {
        this.getProcedimientoSelectButton().setDisabled(!record.get('Activo'));
        this.getProcedimientoForm().getForm().loadRecord(record);
    }

});
