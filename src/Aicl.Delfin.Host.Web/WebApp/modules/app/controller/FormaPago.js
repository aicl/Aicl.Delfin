/*
 * File: app/controller/FormaPago.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('App.controller.FormaPago', {
    extend: 'Ext.app.Controller',

    stores: [
        'FormaPago'
    ],
    views: [
        'formapago.Panel'
    ],

    refs: [
        {
            ref: 'formaPagoDeleteButton',
            selector: 'toolbar[name=FormaPagoToolbar] button[action=remove]'
        },
        {
            ref: 'formaPagoList',
            selector: 'gridpanel[name=FormaPagoList]'
        },
        {
            ref: 'formaPagoForm',
            selector: 'form[name=FormaPagoForm]'
        }
    ],

    onFormaPagoListSelectionChange: function(tablepanel, selections, options) {

        if (selections.length){
            this.getFormaPagoForm().getForm().loadRecord(selections[0]);
            this.getFormaPagoDeleteButton().setDisabled(false);
        }
        else{
            this.getFormaPagoForm().getForm().reset();
            this.getFormaPagoDeleteButton().setDisabled(true);   
        }
    },

    onFormaPagoNewButtonClick: function(button, e, options) {
        this.getFormaPagoForm().getForm().reset();
    },

    onFormaPagoSaveButtonClick: function(button, e, options) {
        var record = this.getFormaPagoForm().getForm().getFieldValues(false);
        this.getFormaPagoStore().getProxy().extraParams={format:'json'};
        this.getFormaPagoStore().save(record);
    },

    onFormaPagoRemoveButtonClick: function(button, e, options) {
        var record = this.getFormaPagoList().getSelectionModel().getSelection()[0];
        this.getFormaPagoStore().remove(record);
    },

    onLaunch: function() {
        var me = this;

        Ext.create('Ext.LoadMask', me.getFormaPagoList(), {
            msg: "Cargando datos...",
            store: me.getFormaPagoStore()
        });

        this.getFormaPagoStore().load();

        this.getFormaPagoStore().on('write', function(store, operation, eOpts ){
            var record =  operation.getRecords()[0];
            if (operation.action != 'destroy'){
                this.getFormaPagoList().getSelectionModel().select(record,true,true);
                this.getFormaPagoForm().getForm().loadRecord(record);
            }
            else{
                this.getUserForm().getForm().reset();
            }
        }, this);

        this.getFormaPagoDeleteButton().setDisabled(true);


    },

    init: function(application) {
        this.control({
            "gridpanel[name=FormaPagoList]": {
                selectionchange: this.onFormaPagoListSelectionChange
            },
            "toolbar[name=FormaPagoToolbar] button[action=new]": {
                click: this.onFormaPagoNewButtonClick
            },
            "toolbar[name=FormaPagoToolbar] button[action=save]": {
                click: this.onFormaPagoSaveButtonClick
            },
            "toolbar[name=FormaPagoToolbar] button[action=remove]": {
                click: this.onFormaPagoRemoveButtonClick
            }
        });
    }

});
